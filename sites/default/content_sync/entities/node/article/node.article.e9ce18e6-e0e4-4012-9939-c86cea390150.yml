uuid:
  -
    value: e9ce18e6-e0e4-4012-9939-c86cea390150
langcode:
  -
    value: ru
type:
  -
    target_id: article
revision_timestamp:
  -
    value: '2022-02-26T21:29:15+00:00'
    format: 'Y-m-d\TH:i:sP'
revision_uid:
  -
    target_type: user
    target_uuid: 0773a8b2-1244-4916-a1bf-1f5f23e46286
revision_log: {  }
status:
  -
    value: true
uid:
  -
    target_type: user
    target_uuid: 0773a8b2-1244-4916-a1bf-1f5f23e46286
title:
  -
    value: 'Как применить патч с помощью Composer'
created:
  -
    value: '2022-02-26T21:26:38+00:00'
    format: 'Y-m-d\TH:i:sP'
changed:
  -
    value: '2022-06-10T08:22:10+00:00'
    format: 'Y-m-d\TH:i:sP'
promote:
  -
    value: false
sticky:
  -
    value: false
default_langcode:
  -
    value: true
revision_translation_affected:
  -
    value: true
metatag:
  value:
    canonical_url: 'http://default/article/kak-primenit-patch-s-pomoschyu-composer'
    title: 'Как применить патч с помощью Composer | drupeople.ru'
    description: 'применить патч ptch Composer'
body:
  -
    value: "<p>Когда мы обнаруживаем, что какая-то библиотека работает с ошибкой, разработчики программного обеспечения часто выпускают патч для исправления этой ошибки. Но вот проблема, если проект сконфигурирован с помощью Composer, то любые исправления в исходных файлах просто сотрутся при обновлении.&nbsp;</p>\r\n\r\n<p>В таких случаях можно воспользоваться специальной библиотекой, при помощи которой можно научить Composer устанавливать патчи самостоятельно.&nbsp;</p>\r\n\r\n<p>Для этого нам нужно установить библиотеку</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">composer require cweagans/composer-patches</code></pre>\r\n\r\n<p>После этого в файле composer.json вы можете добавлять патчи для библиотек. Делается это в секции <em>extra</em> ключ&nbsp;<em>patches</em>. Например:</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">\"extra\": {\r\n    \"enable-patching\": true,\r\n    \"patches\": {\r\n        \"drupal/core\": {\r\n            \"&lt;patch1 information&gt;\": \"&lt;patch1 file path&gt;\"\r\n        },\r\n         \"drupal/libraries\": {\r\n            \"&lt;patch1 information&gt;\": \"&lt;patch1 file path&gt;\"\r\n        }\r\n     }\r\n}</code></pre>\r\n\r\n<p>Вам нужно указать какую библиотеку вы хотите исправить (в примере drupal/core), а в качестве значения выступают ключ (название патча, текст) и значение - путь к файлу (абсолютный или относительный).</p>\r\n\r\n<p>Также вам нужно добавить опцию&nbsp;\"enable-patching\": true</p>\r\n\r\n<p>После этих действий нужно запустить команду:</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">composer install</code></pre>\r\n\r\n<p>Патч должен примениться.&nbsp;</p>\r\n\r\n<p>Иногда после применения патча файл composer.lock может не обновиться. Чтобы исправить этот момент вам нужно выполнить команду:</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">composer update --lock</code></pre>\r\n\r\n<p>Если при обновлении Composer не смог применить патч, то он выполнит действие по умолчанию и не остановится на ошибке. Чтобы избежать этого и заставить Composer остановить работу с ошибкой, нужно прописать ключ в секции <em>extra</em>:</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">\"composer-exit-on-patch-failure\": true</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n"
    format: editor
    processed: |
      <p>Когда мы обнаруживаем, что какая-то библиотека работает с ошибкой, разработчики программного обеспечения часто выпускают патч для исправления этой ошибки. Но вот проблема, если проект сконфигурирован с помощью Composer, то любые исправления в исходных файлах просто сотрутся при обновлении. </p>

      <p>В таких случаях можно воспользоваться специальной библиотекой, при помощи которой можно научить Composer устанавливать патчи самостоятельно. </p>

      <p>Для этого нам нужно установить библиотеку</p>

      <pre>
      <code class="language-bash">composer require cweagans/composer-patches</code></pre>

      <p>После этого в файле composer.json вы можете добавлять патчи для библиотек. Делается это в секции <em>extra</em> ключ <em>patches</em>. Например:</p>

      <pre>
      <code class="language-bash">"extra": {
          "enable-patching": true,
          "patches": {
              "drupal/core": {
                  "&lt;patch1 information&gt;": "&lt;patch1 file path&gt;"
              },
               "drupal/libraries": {
                  "&lt;patch1 information&gt;": "&lt;patch1 file path&gt;"
              }
           }
      }</code></pre>

      <p>Вам нужно указать какую библиотеку вы хотите исправить (в примере drupal/core), а в качестве значения выступают ключ (название патча, текст) и значение - путь к файлу (абсолютный или относительный).</p>

      <p>Также вам нужно добавить опцию "enable-patching": true</p>

      <p>После этих действий нужно запустить команду:</p>

      <pre>
      <code class="language-bash">composer install</code></pre>

      <p>Патч должен примениться. </p>

      <p>Иногда после применения патча файл composer.lock может не обновиться. Чтобы исправить этот момент вам нужно выполнить команду:</p>

      <pre>
      <code class="language-bash">composer update --lock</code></pre>

      <p>Если при обновлении Composer не смог применить патч, то он выполнит действие по умолчанию и не остановится на ошибке. Чтобы избежать этого и заставить Composer остановить работу с ошибкой, нужно прописать ключ в секции <em>extra</em>:</p>

      <pre>
      <code class="language-bash">"composer-exit-on-patch-failure": true</code></pre>

      <p> </p>
    summary: ''
    summary_processed: ''
field_category:
  -
    target_type: taxonomy_term
    target_uuid: a4c4077d-cde4-4a36-ab84-cb39c32cae53
field_image:
  -
    target_type: media
    target_uuid: bce7fe2c-2693-492c-9dcb-e57384a53abe
field_metatags:
  -
    value:
      description: 'применить патч ptch Composer'
field_source:
  -
    value: 'https://rias.be/blog/using-composer-patches'
field_teaser:
  -
    value: "<p>Иногда в процессе разработки сталкиваешься с проблемой когда нужно исправить ошибку в библиотеке. В этой статье мы разберем как это можно сделать с помощь Composer.</p>\r\n"
    format: editor
    processed: |
      <p>Иногда в процессе разработки сталкиваешься с проблемой когда нужно исправить ошибку в библиотеке. В этой статье мы разберем как это можно сделать с помощь Composer.</p>
_content_sync:
  entity_type: node
  entity_dependencies:
    user:
      - user.user.0773a8b2-1244-4916-a1bf-1f5f23e46286
    taxonomy_term:
      - taxonomy_term.article_category.a4c4077d-cde4-4a36-ab84-cb39c32cae53
    media:
      - media.image.bce7fe2c-2693-492c-9dcb-e57384a53abe
